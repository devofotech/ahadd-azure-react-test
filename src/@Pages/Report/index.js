import { useState, useEffect } from 'react';
import { Grid } from '@material-ui/core';
import { Link, Redirect } from 'react-router-dom';
import moment from 'moment';
import Table from '@Components/MaterialTable/v7';
import Navbar from '@Components/Navbar';
import NoDataImg from '@Assets/Images/Data-not-found3.svg';
import DeleteDialog from '@Components/DeleteDialog';
import MainContentContainer from '@Components/MainContentContainer';
import AvatarIcon from '@Components/AvatarIcon';
import { ActionBtn } from './Components';
import Hook from './hook';

const columns = [
  {
    name: 'Number',
    selector: 'id',
    options: {
      setCellHeaderProps: () => ({
        style: { textAlign: 'left' },
      }),
      setCellProps: () => ({
        style: { textAlign: 'left' },
      }),
    },
  },
  {
    name: 'Inspection Name',
    selector: 'name',
    options: {
      setCellHeaderProps: () => ({
        style: { textAlign: 'center' },
      }),
      setCellProps: () => ({
        style: { textAlign: 'center' },
      }),
    },
  },
  {
    name: 'Cycle',
    selector: 'cycle',
    options: {
      setCellHeaderProps: () => ({
        style: { textAlign: 'center' },
      }),
      setCellProps: () => ({
        style: { textAlign: 'center' },
      }),
    },
  },
  {
    name: 'Year',
    selector: 'year',
    options: {
      setCellHeaderProps: () => ({
        style: { textAlign: 'center' },
      }),
      setCellProps: () => ({
        style: { textAlign: 'center' },
      }),
    },
  },
  {
    name: 'Report Generated',
    selector: 'createdAt',
    options: {
      setCellHeaderProps: () => ({
        style: { textAlign: 'center' },
      }),
      setCellProps: () => ({
        style: { textAlign: 'center' },
      }),
    },
  },
  {
    name: 'Generated By',
    selector: 'userimage',
    options: {
      setCellHeaderProps: () => ({
        style: { textAlign: 'center' },
      }),
      setCellProps: () => ({
        style: { textAlign: 'center' },
      }),
    },
  },
  {
    name: 'Actions',
    selector: 'actions',
    options: {
      setCellHeaderProps: () => ({
        style: { textAlign: 'center' },
      }),
      setCellProps: () => ({
        style: { textAlign: 'center' },
      }),
    },
  },
];

export default function Report(props) {
  const h = Hook(props);
  const [openDialog, setOpenDialog] = useState(false);
  const [data, setData] = useState(false);
  const [selectedReport, setSelectedReport] = useState();
  if (!props.user?.can_view_report) return <Redirect to="/project" />;
  const userTest = { name: 'Abdullah Umar', path: null };

  useEffect(() => {
    const reportData = h.reports.map(m => ({
      ...m,
      year: moment(h.createdAt).format('YYYY'),
      createdAt: moment(h.createdAt).format('DD MMM YYYY / HH:MM'),
      userimage: <div className="flex-standard"><AvatarIcon user={userTest} size="2.5em" /></div>,
      actions: <ActionBtn />,
    }));
    setData(reportData);
  }, []);

  return (
    <MainContentContainer>
      <div className="d-flex justify-content-between">
        <Navbar
          to="/project/"
          text="Report"
        />
      </div>
      <Grid item xs={12} style={{ padding: 20 }}>
        {data.length ? (
          <Table {...h} columns={columns} tableData={data} />
        ) : (
          <div className="d-flex justify-content-center">
            <img src={NoDataImg} style={{ width: '30vw' }} />
          </div>
        )}
      </Grid>
      <DeleteDialog
        open={openDialog}
        setOpen={setOpenDialog}
        selected={selectedReport}
        setSelected={setSelectedReport}
        deleteFunction={() => h.onDelete(selectedReport.id)}
      />
    </MainContentContainer>
  );
}
